local druid = require("druid.druid")
local timer = require("druid.extended.timer")

local core_url = "game:/core#core"

function init(self)
	msg.post(".", "acquire_input_focus")
	self.druid = druid.new(self)
	-- self.my_timer = self.druid:new(timer, "my_timer", 0, 0)
	-- self.opponent_timer = self.druid:new(timer, "opponent_timer", 0, 0)

	self.action_button_node = gui.get_node("action_button/box")
	self.action_button = self.druid:new_button("action_button/box", function()
		print("press button")
		msg.post(core_url, "action_button_pressed")
	end)
	self.action_button_text = self.druid:new_text("action_button/text")
end

function final(self)
	self.druid:final()
end

function update(self, dt)
	self.druid:update(dt)
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)
	-- if message_id == hash("start_my_timer") then
	-- 	self.my_timer:set_interval(message.time, 0)
	-- elseif message_id == hash("start_opponent_timer") then
	-- 	self.opponent_timer:set_interval(message.time, 0)
	-- elseif message_id == hash("stop_my_timer") then
	-- 	self.my_timer:set_state(false)
	-- 	self.my_timer:set_to(0)
	-- elseif message_id == hash("start_opponent_timer") then
	-- 	self.opponent_timer:set_state(false)
	-- 	self.opponent_timer:set_to(0)
	-- end
	if message_id == hash("hide_action_button") then
		gui.set_enabled(self.action_button_node, false)
		print("HHHHHHHEEEEEEDDDDDEEE")
	elseif message_id == hash("show_action_button") then
		gui.set_enabled(self.action_button_node, true)
		self.action_button_text:set_to(message.text)
	end
end
--
function on_input(self, action_id, action)
	return self.druid:on_input(action_id, action)
end

function on_reload(self)
	self.druid:on_reload()
end
