services:
  auth:
    build:
      context: .
      dockerfile: Dockerfile.service
      args:
        SERVICE_NAME: auth
    ports:
      - 127.0.0.1:8080:8080
    environment:
      JWT_PRIVATE: ${JWT_PRIVATE}
      DATABASE_URL: "user=${DB_USER} password=${DB_PASS} dbname=${DB_NAME} host=database sslmode=disable"
    depends_on:
      database:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  database:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 127.0.0.1:6969:5432
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$DB_NAME"]
      retries: 10
      interval: 5s
      timeout: 5s
      start_period: 80s

  migrate:
      build:
        dockerfile: Dockerfile.goose        
      depends_on:
        database:
          condition: service_healthy
      volumes:
        - ./migrations:/migrations
      environment:
        GOOSE_DRIVER: postgres
        GOOSE_DBSTRING: "postgres://${DB_USER}:${DB_PASS}@database:5432/${DB_NAME}"
        GOOSE_MIGRATION_DIR: /migrations
      command:
        - "./goose"
        - "up"

volumes:
  database-data:
